# 파이썬
#1
a = [1,5,8,2,4,9]
a[2]= 0
a[3]= 0
print(a)

#2
i=int(input())
sum=0
if i <=100:
    for a in range(i+1):
        sum=sum+a
    print(sum)
            
#3
num_1 = input("정수를 입력하세요: ")
want = list(map(int, num_1.split()))
list.sort(want)
for i in range(0,len(want), 2):
    want[i] = str(want[i])
print(want)

#4

#5
fruitdb = [['사과', 1020], ['오렌지', 880], ['포도', 3160]]
print(fruitdb[2])
print(fruitdb[0][0])

#6
fruits = {'사과', '오렌지', '포도'}
print('사과' in fruits)
print('멜멜론' in fruits)

#7
def fruit_counts():
    training_data = [['연두', 3, '사과'], ['노랑', 3, '사과'], ['빨강', 2, '포도'], ['빨강', 1, '포도'], ['노랑', 3, '레몬']]
    result_dict = {}
    for data in training_data:
        fruit = data[-1]
        if fruit in result_dict:
            result_dict[fruit] += 1
        else:
            result_dict[fruit] = 1
    return result_dict
print(fruit_counts())

#8
def solution(str1, str2):
    if str2 in str1:
        return 1
    else:
        return 2

str1 = input("first string: ")
str2 = input("second string: ")
result = solution(str1, str2)
print(result)

#9
def solution(n):
    divisors=[]
    for i in range(1,n+1):
        if n % i == 0:
            divisors.append(i)
    return divisors
n=int(input("정수를 입력하세요:"))
answer=solution(n)
print(f"{n}의 약수:{answer}")

#10
M = int(input())
N = int(input())
arr = []
for i in range(M, N + 1):
    if i == 1:
        pass
    elif i == 2:
        arr.append(i)
    else:
        for j in range(2, i):
            if i % j == 0:
                break
            elif j == i - 1:
                arr.append(i)
if len(arr) == 0:
    print("소수를 찾을 수 ")
else:
    print(sum(arr))
    print(min(arr))
# R
#1
x <- c(4,6,5,7,10,9,4,15)
x

#2
rep(c(1,2), times = 5)

#3
A <- c(2, 12, 5, 6, 3, 31, 35, 13, 5, 5, 7, 72 )
A.mtx <- matrix(c(A), nrow = 3, byrow = TRUE)
A.mtx

#4
name <- c("kim","lee","park","Oh")
sex <- c('f','m','f','m')
income <- c(100,102,300,204)

df <- data.frame(name, sex, income)
df

#5
x <- c(34, 56, 55, 87, NA, 4, 77, NA, 21, NA, 39)
is.na(x)
table(is.na(x))

#6
x <- c(1,5,1,3,5,7,5)
unique(x)

#7
data()
iris
iris[c(1:5), ]
